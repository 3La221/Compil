Terminals unused in grammar

   mc_err


Grammar

    0 $accept: S $end

    1 S: ROUTINES

    2 ROUTINES: type mc_routine idf po idf ARGS pf DECROUTINE mc_endr ROUTINES
    3         | PROG

    4 ARGS: vig idf ARGS
    5     | /* empty */

    6 DECROUTINE: type idf ARGS pvg DECROUTINE
    7           | type idf mul cst pvg DECROUTINE
    8           | type idf mc_dimension po cst pf pvg DECROUTINE
    9           | type idf mc_dimension po cst vig cst pf pvg DECROUTINE
   10           | INSTROUTINE

   11 INSTROUTINE: INSTES INSTROUTINE
   12            | INSTDOWHILE INSTROUTINE
   13            | INSTIF INSTROUTINE
   14            | INSTEQ INSTROUTINE
   15            | INSTCALL INSTROUTINE
   16            | INSTAFF INSTROUTINE
   17            | idf aff cst
   18            | idf aff mc_true
   19            | idf aff mc_false
   20            | idf aff mc_reel
   21            | idf aff cst_chaine
   22            | idf aff tabl
   23            | idf aff idf

   24 PROG: mc_prog idf DEC mc_end

   25 DEC: type idf ARGS pvg DEC
   26    | type idf mul cst pvg DEC
   27    | type idf mc_dimension po cst pf pvg DEC
   28    | type idf mc_dimension po cst vig cst pf pvg DEC
   29    | INST

   30 INST: INSTES INST
   31     | INSTDOWHILE INST
   32     | INSTIF INST
   33     | INSTEQ INST
   34     | INSTAFF INST
   35     | INSTCALL INST
   36     | /* empty */

   37 INSTAFF: idf aff EXP pvg
   38        | idf aff mc_false pvg
   39        | idf aff mc_true pvg
   40        | idf aff cst_chaine pvg

   41 INSTES: mc_read po idf pf pvg
   42       | mc_write po SMT pf pvg

   43 SMT: idf vig SMT
   44    | cst_chaine vig SMT
   45    | idf
   46    | cst_chaine

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP pf INST mc_enddo pvg

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_else INST mc_endif pvg
   49       | mc_if po LOGIC_EXP pf mc_then INST mc_endif pvg

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po idf EQARGS pf pvg

   51 EQARGS: vig idf EQARGS
   52       | vig tabl EQARGS
   53       | vig idf
   54       | vig tabl

   55 INSTCALL: idf aff mc_call idf po CALLARGS pf pvg

   56 CALLARGS: idf vig CALLARGS
   57         | DATA vig CALLARGS
   58         | idf
   59         | DATA

   60 LOGIC_EXP: CODT
   61          | LOGIC_EXP COPR CODT
   62          | mc_false
   63          | mc_true

   64 CODT: po EXP COPR EXP pf
   65     | po EXP COPR mc_false pf
   66     | po EXP COPR mc_true pf
   67     | po mc_false COPR EXP pf
   68     | po mc_true COPR EXP pf
   69     | idf COPR idf

   70 COPR: pt OPR pt

   71 DATA: cst
   72     | mc_true
   73     | mc_false
   74     | mc_reel
   75     | cst_chaine
   76     | tabl

   77 EXP: EXP plus T
   78    | EXP moin T
   79    | T

   80 T: T mul F
   81  | T divsep F
   82  | F

   83 F: po EXP pf
   84  | EXP_item

   85 EXP_item: idf
   86         | cst
   87         | tabl
   88         | mc_reel


Terminals, with rules where they appear

$end (0) 0
error (256)
mc_prog (258) 24
mc_end (259) 24
mc_routine (260) 2
mc_endr (261) 2
mc_read (262) 41
mc_write (263) 42
mc_if (264) 48 49
mc_then (265) 48 49
mc_else (266) 48
mc_endif (267) 48 49
mc_dowhile (268) 47
mc_enddo (269) 47
mc_equivalence (270) 50
type (271) 2 6 7 8 9 25 26 27 28
OPR (272) 70
mul (273) 7 26 80
mc_call (274) 55
idf (275) 2 4 6 7 8 9 17 18 19 20 21 22 23 24 25 26 27 28 37 38 39
    40 41 43 45 50 51 53 55 56 58 69 85
cst (276) 7 8 9 17 26 27 28 71 86
aff (277) 17 18 19 20 21 22 23 37 38 39 40 55
pvg (278) 6 7 8 9 25 26 27 28 37 38 39 40 41 42 47 48 49 50 55
vig (279) 4 9 28 43 44 50 51 52 53 54 56 57
po (280) 2 8 9 27 28 41 42 47 48 49 50 55 64 65 66 67 68 83
pf (281) 2 8 9 27 28 41 42 47 48 49 50 55 64 65 66 67 68 83
mc_err (282)
mc_reel (283) 20 74 88
cst_chaine (284) 21 40 44 46 75
mc_dimension (285) 8 9 27 28
mc_true (286) 18 39 63 66 68 72
mc_false (287) 19 38 62 65 67 73
tabl (288) 22 52 54 76 87
moin (289) 78
plus (290) 77
divsep (291) 81
pt (292) 70


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
S (39)
    on left: 1, on right: 0
ROUTINES (40)
    on left: 2 3, on right: 1 2
ARGS (41)
    on left: 4 5, on right: 2 4 6 25
DECROUTINE (42)
    on left: 6 7 8 9 10, on right: 2 6 7 8 9
INSTROUTINE (43)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 10 11
    12 13 14 15 16
PROG (44)
    on left: 24, on right: 3
DEC (45)
    on left: 25 26 27 28 29, on right: 24 25 26 27 28
INST (46)
    on left: 30 31 32 33 34 35 36, on right: 29 30 31 32 33 34 35 47
    48 49
INSTAFF (47)
    on left: 37 38 39 40, on right: 16 34
INSTES (48)
    on left: 41 42, on right: 11 30
SMT (49)
    on left: 43 44 45 46, on right: 42 43 44
INSTDOWHILE (50)
    on left: 47, on right: 12 31
INSTIF (51)
    on left: 48 49, on right: 13 32
INSTEQ (52)
    on left: 50, on right: 14 33
EQARGS (53)
    on left: 51 52 53 54, on right: 50 51 52
INSTCALL (54)
    on left: 55, on right: 15 35
CALLARGS (55)
    on left: 56 57 58 59, on right: 55 56 57
LOGIC_EXP (56)
    on left: 60 61 62 63, on right: 47 48 49 61
CODT (57)
    on left: 64 65 66 67 68 69, on right: 60 61
COPR (58)
    on left: 70, on right: 61 64 65 66 67 68 69
DATA (59)
    on left: 71 72 73 74 75 76, on right: 57 59
EXP (60)
    on left: 77 78 79, on right: 37 64 65 66 67 68 77 78 83
T (61)
    on left: 80 81 82, on right: 77 78 79 80 81
F (62)
    on left: 83 84, on right: 80 81 82
EXP_item (63)
    on left: 85 86 87 88, on right: 84


state 0

    0 $accept: . S $end

    mc_prog  shift, and go to state 1
    type     shift, and go to state 2

    S         go to state 3
    ROUTINES  go to state 4
    PROG      go to state 5


state 1

   24 PROG: mc_prog . idf DEC mc_end

    idf  shift, and go to state 6


state 2

    2 ROUTINES: type . mc_routine idf po idf ARGS pf DECROUTINE mc_endr ROUTINES

    mc_routine  shift, and go to state 7


state 3

    0 $accept: S . $end

    $end  shift, and go to state 8


state 4

    1 S: ROUTINES .

    $default  reduce using rule 1 (S)


state 5

    3 ROUTINES: PROG .

    $default  reduce using rule 3 (ROUTINES)


state 6

   24 PROG: mc_prog idf . DEC mc_end

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 14
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    DEC          go to state 16
    INST         go to state 17
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 7

    2 ROUTINES: type mc_routine . idf po idf ARGS pf DECROUTINE mc_endr ROUTINES

    idf  shift, and go to state 24


state 8

    0 $accept: S $end .

    $default  accept


state 9

   41 INSTES: mc_read . po idf pf pvg

    po  shift, and go to state 25


state 10

   42 INSTES: mc_write . po SMT pf pvg

    po  shift, and go to state 26


state 11

   48 INSTIF: mc_if . po LOGIC_EXP pf mc_then INST mc_else INST mc_endif pvg
   49       | mc_if . po LOGIC_EXP pf mc_then INST mc_endif pvg

    po  shift, and go to state 27


state 12

   47 INSTDOWHILE: mc_dowhile . po LOGIC_EXP pf INST mc_enddo pvg

    po  shift, and go to state 28


state 13

   50 INSTEQ: mc_equivalence . po idf EQARGS pf vig po idf EQARGS pf pvg

    po  shift, and go to state 29


state 14

   25 DEC: type . idf ARGS pvg DEC
   26    | type . idf mul cst pvg DEC
   27    | type . idf mc_dimension po cst pf pvg DEC
   28    | type . idf mc_dimension po cst vig cst pf pvg DEC

    idf  shift, and go to state 30


state 15

   37 INSTAFF: idf . aff EXP pvg
   38        | idf . aff mc_false pvg
   39        | idf . aff mc_true pvg
   40        | idf . aff cst_chaine pvg
   55 INSTCALL: idf . aff mc_call idf po CALLARGS pf pvg

    aff  shift, and go to state 31


state 16

   24 PROG: mc_prog idf DEC . mc_end

    mc_end  shift, and go to state 32


state 17

   29 DEC: INST .

    $default  reduce using rule 29 (DEC)


state 18

   34 INST: INSTAFF . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 33
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 19

   30 INST: INSTES . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 34
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 20

   31 INST: INSTDOWHILE . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 35
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 21

   32 INST: INSTIF . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 36
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 22

   33 INST: INSTEQ . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 37
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 23

   35 INST: INSTCALL . INST

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 38
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 24

    2 ROUTINES: type mc_routine idf . po idf ARGS pf DECROUTINE mc_endr ROUTINES

    po  shift, and go to state 39


state 25

   41 INSTES: mc_read po . idf pf pvg

    idf  shift, and go to state 40


state 26

   42 INSTES: mc_write po . SMT pf pvg

    idf         shift, and go to state 41
    cst_chaine  shift, and go to state 42

    SMT  go to state 43


state 27

   48 INSTIF: mc_if po . LOGIC_EXP pf mc_then INST mc_else INST mc_endif pvg
   49       | mc_if po . LOGIC_EXP pf mc_then INST mc_endif pvg

    idf       shift, and go to state 44
    po        shift, and go to state 45
    mc_true   shift, and go to state 46
    mc_false  shift, and go to state 47

    LOGIC_EXP  go to state 48
    CODT       go to state 49


state 28

   47 INSTDOWHILE: mc_dowhile po . LOGIC_EXP pf INST mc_enddo pvg

    idf       shift, and go to state 44
    po        shift, and go to state 45
    mc_true   shift, and go to state 46
    mc_false  shift, and go to state 47

    LOGIC_EXP  go to state 50
    CODT       go to state 49


state 29

   50 INSTEQ: mc_equivalence po . idf EQARGS pf vig po idf EQARGS pf pvg

    idf  shift, and go to state 51


state 30

   25 DEC: type idf . ARGS pvg DEC
   26    | type idf . mul cst pvg DEC
   27    | type idf . mc_dimension po cst pf pvg DEC
   28    | type idf . mc_dimension po cst vig cst pf pvg DEC

    mul           shift, and go to state 52
    vig           shift, and go to state 53
    mc_dimension  shift, and go to state 54

    $default  reduce using rule 5 (ARGS)

    ARGS  go to state 55


state 31

   37 INSTAFF: idf aff . EXP pvg
   38        | idf aff . mc_false pvg
   39        | idf aff . mc_true pvg
   40        | idf aff . cst_chaine pvg
   55 INSTCALL: idf aff . mc_call idf po CALLARGS pf pvg

    mc_call     shift, and go to state 56
    idf         shift, and go to state 57
    cst         shift, and go to state 58
    po          shift, and go to state 59
    mc_reel     shift, and go to state 60
    cst_chaine  shift, and go to state 61
    mc_true     shift, and go to state 62
    mc_false    shift, and go to state 63
    tabl        shift, and go to state 64

    EXP       go to state 65
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 32

   24 PROG: mc_prog idf DEC mc_end .

    $default  reduce using rule 24 (PROG)


state 33

   34 INST: INSTAFF INST .

    $default  reduce using rule 34 (INST)


state 34

   30 INST: INSTES INST .

    $default  reduce using rule 30 (INST)


state 35

   31 INST: INSTDOWHILE INST .

    $default  reduce using rule 31 (INST)


state 36

   32 INST: INSTIF INST .

    $default  reduce using rule 32 (INST)


state 37

   33 INST: INSTEQ INST .

    $default  reduce using rule 33 (INST)


state 38

   35 INST: INSTCALL INST .

    $default  reduce using rule 35 (INST)


state 39

    2 ROUTINES: type mc_routine idf po . idf ARGS pf DECROUTINE mc_endr ROUTINES

    idf  shift, and go to state 69


state 40

   41 INSTES: mc_read po idf . pf pvg

    pf  shift, and go to state 70


state 41

   43 SMT: idf . vig SMT
   45    | idf .

    vig  shift, and go to state 71

    $default  reduce using rule 45 (SMT)


state 42

   44 SMT: cst_chaine . vig SMT
   46    | cst_chaine .

    vig  shift, and go to state 72

    $default  reduce using rule 46 (SMT)


state 43

   42 INSTES: mc_write po SMT . pf pvg

    pf  shift, and go to state 73


state 44

   69 CODT: idf . COPR idf

    pt  shift, and go to state 74

    COPR  go to state 75


state 45

   64 CODT: po . EXP COPR EXP pf
   65     | po . EXP COPR mc_false pf
   66     | po . EXP COPR mc_true pf
   67     | po . mc_false COPR EXP pf
   68     | po . mc_true COPR EXP pf

    idf       shift, and go to state 57
    cst       shift, and go to state 58
    po        shift, and go to state 59
    mc_reel   shift, and go to state 60
    mc_true   shift, and go to state 76
    mc_false  shift, and go to state 77
    tabl      shift, and go to state 64

    EXP       go to state 78
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 46

   63 LOGIC_EXP: mc_true .

    $default  reduce using rule 63 (LOGIC_EXP)


state 47

   62 LOGIC_EXP: mc_false .

    $default  reduce using rule 62 (LOGIC_EXP)


state 48

   48 INSTIF: mc_if po LOGIC_EXP . pf mc_then INST mc_else INST mc_endif pvg
   49       | mc_if po LOGIC_EXP . pf mc_then INST mc_endif pvg
   61 LOGIC_EXP: LOGIC_EXP . COPR CODT

    pf  shift, and go to state 79
    pt  shift, and go to state 74

    COPR  go to state 80


state 49

   60 LOGIC_EXP: CODT .

    $default  reduce using rule 60 (LOGIC_EXP)


state 50

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP . pf INST mc_enddo pvg
   61 LOGIC_EXP: LOGIC_EXP . COPR CODT

    pf  shift, and go to state 81
    pt  shift, and go to state 74

    COPR  go to state 80


state 51

   50 INSTEQ: mc_equivalence po idf . EQARGS pf vig po idf EQARGS pf pvg

    vig  shift, and go to state 82

    EQARGS  go to state 83


state 52

   26 DEC: type idf mul . cst pvg DEC

    cst  shift, and go to state 84


state 53

    4 ARGS: vig . idf ARGS

    idf  shift, and go to state 85


state 54

   27 DEC: type idf mc_dimension . po cst pf pvg DEC
   28    | type idf mc_dimension . po cst vig cst pf pvg DEC

    po  shift, and go to state 86


state 55

   25 DEC: type idf ARGS . pvg DEC

    pvg  shift, and go to state 87


state 56

   55 INSTCALL: idf aff mc_call . idf po CALLARGS pf pvg

    idf  shift, and go to state 88


state 57

   85 EXP_item: idf .

    $default  reduce using rule 85 (EXP_item)


state 58

   86 EXP_item: cst .

    $default  reduce using rule 86 (EXP_item)


state 59

   83 F: po . EXP pf

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    EXP       go to state 89
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 60

   88 EXP_item: mc_reel .

    $default  reduce using rule 88 (EXP_item)


state 61

   40 INSTAFF: idf aff cst_chaine . pvg

    pvg  shift, and go to state 90


state 62

   39 INSTAFF: idf aff mc_true . pvg

    pvg  shift, and go to state 91


state 63

   38 INSTAFF: idf aff mc_false . pvg

    pvg  shift, and go to state 92


state 64

   87 EXP_item: tabl .

    $default  reduce using rule 87 (EXP_item)


state 65

   37 INSTAFF: idf aff EXP . pvg
   77 EXP: EXP . plus T
   78    | EXP . moin T

    pvg   shift, and go to state 93
    moin  shift, and go to state 94
    plus  shift, and go to state 95


state 66

   79 EXP: T .
   80 T: T . mul F
   81  | T . divsep F

    mul     shift, and go to state 96
    divsep  shift, and go to state 97

    $default  reduce using rule 79 (EXP)


state 67

   82 T: F .

    $default  reduce using rule 82 (T)


state 68

   84 F: EXP_item .

    $default  reduce using rule 84 (F)


state 69

    2 ROUTINES: type mc_routine idf po idf . ARGS pf DECROUTINE mc_endr ROUTINES

    vig  shift, and go to state 53

    $default  reduce using rule 5 (ARGS)

    ARGS  go to state 98


state 70

   41 INSTES: mc_read po idf pf . pvg

    pvg  shift, and go to state 99


state 71

   43 SMT: idf vig . SMT

    idf         shift, and go to state 41
    cst_chaine  shift, and go to state 42

    SMT  go to state 100


state 72

   44 SMT: cst_chaine vig . SMT

    idf         shift, and go to state 41
    cst_chaine  shift, and go to state 42

    SMT  go to state 101


state 73

   42 INSTES: mc_write po SMT pf . pvg

    pvg  shift, and go to state 102


state 74

   70 COPR: pt . OPR pt

    OPR  shift, and go to state 103


state 75

   69 CODT: idf COPR . idf

    idf  shift, and go to state 104


state 76

   68 CODT: po mc_true . COPR EXP pf

    pt  shift, and go to state 74

    COPR  go to state 105


state 77

   67 CODT: po mc_false . COPR EXP pf

    pt  shift, and go to state 74

    COPR  go to state 106


state 78

   64 CODT: po EXP . COPR EXP pf
   65     | po EXP . COPR mc_false pf
   66     | po EXP . COPR mc_true pf
   77 EXP: EXP . plus T
   78    | EXP . moin T

    moin  shift, and go to state 94
    plus  shift, and go to state 95
    pt    shift, and go to state 74

    COPR  go to state 107


state 79

   48 INSTIF: mc_if po LOGIC_EXP pf . mc_then INST mc_else INST mc_endif pvg
   49       | mc_if po LOGIC_EXP pf . mc_then INST mc_endif pvg

    mc_then  shift, and go to state 108


state 80

   61 LOGIC_EXP: LOGIC_EXP COPR . CODT

    idf  shift, and go to state 44
    po   shift, and go to state 45

    CODT  go to state 109


state 81

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP pf . INST mc_enddo pvg

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 110
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 82

   51 EQARGS: vig . idf EQARGS
   52       | vig . tabl EQARGS
   53       | vig . idf
   54       | vig . tabl

    idf   shift, and go to state 111
    tabl  shift, and go to state 112


state 83

   50 INSTEQ: mc_equivalence po idf EQARGS . pf vig po idf EQARGS pf pvg

    pf  shift, and go to state 113


state 84

   26 DEC: type idf mul cst . pvg DEC

    pvg  shift, and go to state 114


state 85

    4 ARGS: vig idf . ARGS

    vig  shift, and go to state 53

    $default  reduce using rule 5 (ARGS)

    ARGS  go to state 115


state 86

   27 DEC: type idf mc_dimension po . cst pf pvg DEC
   28    | type idf mc_dimension po . cst vig cst pf pvg DEC

    cst  shift, and go to state 116


state 87

   25 DEC: type idf ARGS pvg . DEC

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 14
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    DEC          go to state 117
    INST         go to state 17
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 88

   55 INSTCALL: idf aff mc_call idf . po CALLARGS pf pvg

    po  shift, and go to state 118


state 89

   77 EXP: EXP . plus T
   78    | EXP . moin T
   83 F: po EXP . pf

    pf    shift, and go to state 119
    moin  shift, and go to state 94
    plus  shift, and go to state 95


state 90

   40 INSTAFF: idf aff cst_chaine pvg .

    $default  reduce using rule 40 (INSTAFF)


state 91

   39 INSTAFF: idf aff mc_true pvg .

    $default  reduce using rule 39 (INSTAFF)


state 92

   38 INSTAFF: idf aff mc_false pvg .

    $default  reduce using rule 38 (INSTAFF)


state 93

   37 INSTAFF: idf aff EXP pvg .

    $default  reduce using rule 37 (INSTAFF)


state 94

   78 EXP: EXP moin . T

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    T         go to state 120
    F         go to state 67
    EXP_item  go to state 68


state 95

   77 EXP: EXP plus . T

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    T         go to state 121
    F         go to state 67
    EXP_item  go to state 68


state 96

   80 T: T mul . F

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    F         go to state 122
    EXP_item  go to state 68


state 97

   81 T: T divsep . F

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    F         go to state 123
    EXP_item  go to state 68


state 98

    2 ROUTINES: type mc_routine idf po idf ARGS . pf DECROUTINE mc_endr ROUTINES

    pf  shift, and go to state 124


state 99

   41 INSTES: mc_read po idf pf pvg .

    $default  reduce using rule 41 (INSTES)


state 100

   43 SMT: idf vig SMT .

    $default  reduce using rule 43 (SMT)


state 101

   44 SMT: cst_chaine vig SMT .

    $default  reduce using rule 44 (SMT)


state 102

   42 INSTES: mc_write po SMT pf pvg .

    $default  reduce using rule 42 (INSTES)


state 103

   70 COPR: pt OPR . pt

    pt  shift, and go to state 125


state 104

   69 CODT: idf COPR idf .

    $default  reduce using rule 69 (CODT)


state 105

   68 CODT: po mc_true COPR . EXP pf

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    EXP       go to state 126
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 106

   67 CODT: po mc_false COPR . EXP pf

    idf      shift, and go to state 57
    cst      shift, and go to state 58
    po       shift, and go to state 59
    mc_reel  shift, and go to state 60
    tabl     shift, and go to state 64

    EXP       go to state 127
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 107

   64 CODT: po EXP COPR . EXP pf
   65     | po EXP COPR . mc_false pf
   66     | po EXP COPR . mc_true pf

    idf       shift, and go to state 57
    cst       shift, and go to state 58
    po        shift, and go to state 59
    mc_reel   shift, and go to state 60
    mc_true   shift, and go to state 128
    mc_false  shift, and go to state 129
    tabl      shift, and go to state 64

    EXP       go to state 130
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 108

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then . INST mc_else INST mc_endif pvg
   49       | mc_if po LOGIC_EXP pf mc_then . INST mc_endif pvg

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 131
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 109

   61 LOGIC_EXP: LOGIC_EXP COPR CODT .

    $default  reduce using rule 61 (LOGIC_EXP)


state 110

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP pf INST . mc_enddo pvg

    mc_enddo  shift, and go to state 132


state 111

   51 EQARGS: vig idf . EQARGS
   53       | vig idf .

    vig  shift, and go to state 82

    $default  reduce using rule 53 (EQARGS)

    EQARGS  go to state 133


state 112

   52 EQARGS: vig tabl . EQARGS
   54       | vig tabl .

    vig  shift, and go to state 82

    $default  reduce using rule 54 (EQARGS)

    EQARGS  go to state 134


state 113

   50 INSTEQ: mc_equivalence po idf EQARGS pf . vig po idf EQARGS pf pvg

    vig  shift, and go to state 135


state 114

   26 DEC: type idf mul cst pvg . DEC

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 14
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    DEC          go to state 136
    INST         go to state 17
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 115

    4 ARGS: vig idf ARGS .

    $default  reduce using rule 4 (ARGS)


state 116

   27 DEC: type idf mc_dimension po cst . pf pvg DEC
   28    | type idf mc_dimension po cst . vig cst pf pvg DEC

    vig  shift, and go to state 137
    pf   shift, and go to state 138


state 117

   25 DEC: type idf ARGS pvg DEC .

    $default  reduce using rule 25 (DEC)


state 118

   55 INSTCALL: idf aff mc_call idf po . CALLARGS pf pvg

    idf         shift, and go to state 139
    cst         shift, and go to state 140
    mc_reel     shift, and go to state 141
    cst_chaine  shift, and go to state 142
    mc_true     shift, and go to state 143
    mc_false    shift, and go to state 144
    tabl        shift, and go to state 145

    CALLARGS  go to state 146
    DATA      go to state 147


state 119

   83 F: po EXP pf .

    $default  reduce using rule 83 (F)


state 120

   78 EXP: EXP moin T .
   80 T: T . mul F
   81  | T . divsep F

    mul     shift, and go to state 96
    divsep  shift, and go to state 97

    $default  reduce using rule 78 (EXP)


state 121

   77 EXP: EXP plus T .
   80 T: T . mul F
   81  | T . divsep F

    mul     shift, and go to state 96
    divsep  shift, and go to state 97

    $default  reduce using rule 77 (EXP)


state 122

   80 T: T mul F .

    $default  reduce using rule 80 (T)


state 123

   81 T: T divsep F .

    $default  reduce using rule 81 (T)


state 124

    2 ROUTINES: type mc_routine idf po idf ARGS pf . DECROUTINE mc_endr ROUTINES

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 148
    idf             shift, and go to state 149

    DECROUTINE   go to state 150
    INSTROUTINE  go to state 151
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 125

   70 COPR: pt OPR pt .

    $default  reduce using rule 70 (COPR)


state 126

   68 CODT: po mc_true COPR EXP . pf
   77 EXP: EXP . plus T
   78    | EXP . moin T

    pf    shift, and go to state 158
    moin  shift, and go to state 94
    plus  shift, and go to state 95


state 127

   67 CODT: po mc_false COPR EXP . pf
   77 EXP: EXP . plus T
   78    | EXP . moin T

    pf    shift, and go to state 159
    moin  shift, and go to state 94
    plus  shift, and go to state 95


state 128

   66 CODT: po EXP COPR mc_true . pf

    pf  shift, and go to state 160


state 129

   65 CODT: po EXP COPR mc_false . pf

    pf  shift, and go to state 161


state 130

   64 CODT: po EXP COPR EXP . pf
   77 EXP: EXP . plus T
   78    | EXP . moin T

    pf    shift, and go to state 162
    moin  shift, and go to state 94
    plus  shift, and go to state 95


state 131

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST . mc_else INST mc_endif pvg
   49       | mc_if po LOGIC_EXP pf mc_then INST . mc_endif pvg

    mc_else   shift, and go to state 163
    mc_endif  shift, and go to state 164


state 132

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP pf INST mc_enddo . pvg

    pvg  shift, and go to state 165


state 133

   51 EQARGS: vig idf EQARGS .

    $default  reduce using rule 51 (EQARGS)


state 134

   52 EQARGS: vig tabl EQARGS .

    $default  reduce using rule 52 (EQARGS)


state 135

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig . po idf EQARGS pf pvg

    po  shift, and go to state 166


state 136

   26 DEC: type idf mul cst pvg DEC .

    $default  reduce using rule 26 (DEC)


state 137

   28 DEC: type idf mc_dimension po cst vig . cst pf pvg DEC

    cst  shift, and go to state 167


state 138

   27 DEC: type idf mc_dimension po cst pf . pvg DEC

    pvg  shift, and go to state 168


state 139

   56 CALLARGS: idf . vig CALLARGS
   58         | idf .

    vig  shift, and go to state 169

    $default  reduce using rule 58 (CALLARGS)


state 140

   71 DATA: cst .

    $default  reduce using rule 71 (DATA)


state 141

   74 DATA: mc_reel .

    $default  reduce using rule 74 (DATA)


state 142

   75 DATA: cst_chaine .

    $default  reduce using rule 75 (DATA)


state 143

   72 DATA: mc_true .

    $default  reduce using rule 72 (DATA)


state 144

   73 DATA: mc_false .

    $default  reduce using rule 73 (DATA)


state 145

   76 DATA: tabl .

    $default  reduce using rule 76 (DATA)


state 146

   55 INSTCALL: idf aff mc_call idf po CALLARGS . pf pvg

    pf  shift, and go to state 170


state 147

   57 CALLARGS: DATA . vig CALLARGS
   59         | DATA .

    vig  shift, and go to state 171

    $default  reduce using rule 59 (CALLARGS)


state 148

    6 DECROUTINE: type . idf ARGS pvg DECROUTINE
    7           | type . idf mul cst pvg DECROUTINE
    8           | type . idf mc_dimension po cst pf pvg DECROUTINE
    9           | type . idf mc_dimension po cst vig cst pf pvg DECROUTINE

    idf  shift, and go to state 172


state 149

   17 INSTROUTINE: idf . aff cst
   18            | idf . aff mc_true
   19            | idf . aff mc_false
   20            | idf . aff mc_reel
   21            | idf . aff cst_chaine
   22            | idf . aff tabl
   23            | idf . aff idf
   37 INSTAFF: idf . aff EXP pvg
   38        | idf . aff mc_false pvg
   39        | idf . aff mc_true pvg
   40        | idf . aff cst_chaine pvg
   55 INSTCALL: idf . aff mc_call idf po CALLARGS pf pvg

    aff  shift, and go to state 173


state 150

    2 ROUTINES: type mc_routine idf po idf ARGS pf DECROUTINE . mc_endr ROUTINES

    mc_endr  shift, and go to state 174


state 151

   10 DECROUTINE: INSTROUTINE .

    $default  reduce using rule 10 (DECROUTINE)


state 152

   16 INSTROUTINE: INSTAFF . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 175
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 153

   11 INSTROUTINE: INSTES . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 176
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 154

   12 INSTROUTINE: INSTDOWHILE . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 177
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 155

   13 INSTROUTINE: INSTIF . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 178
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 156

   14 INSTROUTINE: INSTEQ . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 179
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 157

   15 INSTROUTINE: INSTCALL . INSTROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 149

    INSTROUTINE  go to state 180
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 158

   68 CODT: po mc_true COPR EXP pf .

    $default  reduce using rule 68 (CODT)


state 159

   67 CODT: po mc_false COPR EXP pf .

    $default  reduce using rule 67 (CODT)


state 160

   66 CODT: po EXP COPR mc_true pf .

    $default  reduce using rule 66 (CODT)


state 161

   65 CODT: po EXP COPR mc_false pf .

    $default  reduce using rule 65 (CODT)


state 162

   64 CODT: po EXP COPR EXP pf .

    $default  reduce using rule 64 (CODT)


state 163

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_else . INST mc_endif pvg

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    INST         go to state 181
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 164

   49 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_endif . pvg

    pvg  shift, and go to state 182


state 165

   47 INSTDOWHILE: mc_dowhile po LOGIC_EXP pf INST mc_enddo pvg .

    $default  reduce using rule 47 (INSTDOWHILE)


state 166

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po . idf EQARGS pf pvg

    idf  shift, and go to state 183


state 167

   28 DEC: type idf mc_dimension po cst vig cst . pf pvg DEC

    pf  shift, and go to state 184


state 168

   27 DEC: type idf mc_dimension po cst pf pvg . DEC

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 14
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    DEC          go to state 185
    INST         go to state 17
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 169

   56 CALLARGS: idf vig . CALLARGS

    idf         shift, and go to state 139
    cst         shift, and go to state 140
    mc_reel     shift, and go to state 141
    cst_chaine  shift, and go to state 142
    mc_true     shift, and go to state 143
    mc_false    shift, and go to state 144
    tabl        shift, and go to state 145

    CALLARGS  go to state 186
    DATA      go to state 147


state 170

   55 INSTCALL: idf aff mc_call idf po CALLARGS pf . pvg

    pvg  shift, and go to state 187


state 171

   57 CALLARGS: DATA vig . CALLARGS

    idf         shift, and go to state 139
    cst         shift, and go to state 140
    mc_reel     shift, and go to state 141
    cst_chaine  shift, and go to state 142
    mc_true     shift, and go to state 143
    mc_false    shift, and go to state 144
    tabl        shift, and go to state 145

    CALLARGS  go to state 188
    DATA      go to state 147


state 172

    6 DECROUTINE: type idf . ARGS pvg DECROUTINE
    7           | type idf . mul cst pvg DECROUTINE
    8           | type idf . mc_dimension po cst pf pvg DECROUTINE
    9           | type idf . mc_dimension po cst vig cst pf pvg DECROUTINE

    mul           shift, and go to state 189
    vig           shift, and go to state 53
    mc_dimension  shift, and go to state 190

    $default  reduce using rule 5 (ARGS)

    ARGS  go to state 191


state 173

   17 INSTROUTINE: idf aff . cst
   18            | idf aff . mc_true
   19            | idf aff . mc_false
   20            | idf aff . mc_reel
   21            | idf aff . cst_chaine
   22            | idf aff . tabl
   23            | idf aff . idf
   37 INSTAFF: idf aff . EXP pvg
   38        | idf aff . mc_false pvg
   39        | idf aff . mc_true pvg
   40        | idf aff . cst_chaine pvg
   55 INSTCALL: idf aff . mc_call idf po CALLARGS pf pvg

    mc_call     shift, and go to state 56
    idf         shift, and go to state 192
    cst         shift, and go to state 193
    po          shift, and go to state 59
    mc_reel     shift, and go to state 194
    cst_chaine  shift, and go to state 195
    mc_true     shift, and go to state 196
    mc_false    shift, and go to state 197
    tabl        shift, and go to state 198

    EXP       go to state 65
    T         go to state 66
    F         go to state 67
    EXP_item  go to state 68


state 174

    2 ROUTINES: type mc_routine idf po idf ARGS pf DECROUTINE mc_endr . ROUTINES

    mc_prog  shift, and go to state 1
    type     shift, and go to state 2

    ROUTINES  go to state 199
    PROG      go to state 5


state 175

   16 INSTROUTINE: INSTAFF INSTROUTINE .

    $default  reduce using rule 16 (INSTROUTINE)


state 176

   11 INSTROUTINE: INSTES INSTROUTINE .

    $default  reduce using rule 11 (INSTROUTINE)


state 177

   12 INSTROUTINE: INSTDOWHILE INSTROUTINE .

    $default  reduce using rule 12 (INSTROUTINE)


state 178

   13 INSTROUTINE: INSTIF INSTROUTINE .

    $default  reduce using rule 13 (INSTROUTINE)


state 179

   14 INSTROUTINE: INSTEQ INSTROUTINE .

    $default  reduce using rule 14 (INSTROUTINE)


state 180

   15 INSTROUTINE: INSTCALL INSTROUTINE .

    $default  reduce using rule 15 (INSTROUTINE)


state 181

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_else INST . mc_endif pvg

    mc_endif  shift, and go to state 200


state 182

   49 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_endif pvg .

    $default  reduce using rule 49 (INSTIF)


state 183

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po idf . EQARGS pf pvg

    vig  shift, and go to state 82

    EQARGS  go to state 201


state 184

   28 DEC: type idf mc_dimension po cst vig cst pf . pvg DEC

    pvg  shift, and go to state 202


state 185

   27 DEC: type idf mc_dimension po cst pf pvg DEC .

    $default  reduce using rule 27 (DEC)


state 186

   56 CALLARGS: idf vig CALLARGS .

    $default  reduce using rule 56 (CALLARGS)


state 187

   55 INSTCALL: idf aff mc_call idf po CALLARGS pf pvg .

    $default  reduce using rule 55 (INSTCALL)


state 188

   57 CALLARGS: DATA vig CALLARGS .

    $default  reduce using rule 57 (CALLARGS)


state 189

    7 DECROUTINE: type idf mul . cst pvg DECROUTINE

    cst  shift, and go to state 203


state 190

    8 DECROUTINE: type idf mc_dimension . po cst pf pvg DECROUTINE
    9           | type idf mc_dimension . po cst vig cst pf pvg DECROUTINE

    po  shift, and go to state 204


state 191

    6 DECROUTINE: type idf ARGS . pvg DECROUTINE

    pvg  shift, and go to state 205


state 192

   23 INSTROUTINE: idf aff idf .
   85 EXP_item: idf .

    mc_endr   reduce using rule 23 (INSTROUTINE)
    $default  reduce using rule 85 (EXP_item)


state 193

   17 INSTROUTINE: idf aff cst .
   86 EXP_item: cst .

    mc_endr   reduce using rule 17 (INSTROUTINE)
    $default  reduce using rule 86 (EXP_item)


state 194

   20 INSTROUTINE: idf aff mc_reel .
   88 EXP_item: mc_reel .

    mc_endr   reduce using rule 20 (INSTROUTINE)
    $default  reduce using rule 88 (EXP_item)


state 195

   21 INSTROUTINE: idf aff cst_chaine .
   40 INSTAFF: idf aff cst_chaine . pvg

    pvg  shift, and go to state 90

    $default  reduce using rule 21 (INSTROUTINE)


state 196

   18 INSTROUTINE: idf aff mc_true .
   39 INSTAFF: idf aff mc_true . pvg

    pvg  shift, and go to state 91

    $default  reduce using rule 18 (INSTROUTINE)


state 197

   19 INSTROUTINE: idf aff mc_false .
   38 INSTAFF: idf aff mc_false . pvg

    pvg  shift, and go to state 92

    $default  reduce using rule 19 (INSTROUTINE)


state 198

   22 INSTROUTINE: idf aff tabl .
   87 EXP_item: tabl .

    mc_endr   reduce using rule 22 (INSTROUTINE)
    $default  reduce using rule 87 (EXP_item)


state 199

    2 ROUTINES: type mc_routine idf po idf ARGS pf DECROUTINE mc_endr ROUTINES .

    $default  reduce using rule 2 (ROUTINES)


state 200

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_else INST mc_endif . pvg

    pvg  shift, and go to state 206


state 201

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po idf EQARGS . pf pvg

    pf  shift, and go to state 207


state 202

   28 DEC: type idf mc_dimension po cst vig cst pf pvg . DEC

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 14
    idf             shift, and go to state 15

    $default  reduce using rule 36 (INST)

    DEC          go to state 208
    INST         go to state 17
    INSTAFF      go to state 18
    INSTES       go to state 19
    INSTDOWHILE  go to state 20
    INSTIF       go to state 21
    INSTEQ       go to state 22
    INSTCALL     go to state 23


state 203

    7 DECROUTINE: type idf mul cst . pvg DECROUTINE

    pvg  shift, and go to state 209


state 204

    8 DECROUTINE: type idf mc_dimension po . cst pf pvg DECROUTINE
    9           | type idf mc_dimension po . cst vig cst pf pvg DECROUTINE

    cst  shift, and go to state 210


state 205

    6 DECROUTINE: type idf ARGS pvg . DECROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 148
    idf             shift, and go to state 149

    DECROUTINE   go to state 211
    INSTROUTINE  go to state 151
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 206

   48 INSTIF: mc_if po LOGIC_EXP pf mc_then INST mc_else INST mc_endif pvg .

    $default  reduce using rule 48 (INSTIF)


state 207

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po idf EQARGS pf . pvg

    pvg  shift, and go to state 212


state 208

   28 DEC: type idf mc_dimension po cst vig cst pf pvg DEC .

    $default  reduce using rule 28 (DEC)


state 209

    7 DECROUTINE: type idf mul cst pvg . DECROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 148
    idf             shift, and go to state 149

    DECROUTINE   go to state 213
    INSTROUTINE  go to state 151
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 210

    8 DECROUTINE: type idf mc_dimension po cst . pf pvg DECROUTINE
    9           | type idf mc_dimension po cst . vig cst pf pvg DECROUTINE

    vig  shift, and go to state 214
    pf   shift, and go to state 215


state 211

    6 DECROUTINE: type idf ARGS pvg DECROUTINE .

    $default  reduce using rule 6 (DECROUTINE)


state 212

   50 INSTEQ: mc_equivalence po idf EQARGS pf vig po idf EQARGS pf pvg .

    $default  reduce using rule 50 (INSTEQ)


state 213

    7 DECROUTINE: type idf mul cst pvg DECROUTINE .

    $default  reduce using rule 7 (DECROUTINE)


state 214

    9 DECROUTINE: type idf mc_dimension po cst vig . cst pf pvg DECROUTINE

    cst  shift, and go to state 216


state 215

    8 DECROUTINE: type idf mc_dimension po cst pf . pvg DECROUTINE

    pvg  shift, and go to state 217


state 216

    9 DECROUTINE: type idf mc_dimension po cst vig cst . pf pvg DECROUTINE

    pf  shift, and go to state 218


state 217

    8 DECROUTINE: type idf mc_dimension po cst pf pvg . DECROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 148
    idf             shift, and go to state 149

    DECROUTINE   go to state 219
    INSTROUTINE  go to state 151
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 218

    9 DECROUTINE: type idf mc_dimension po cst vig cst pf . pvg DECROUTINE

    pvg  shift, and go to state 220


state 219

    8 DECROUTINE: type idf mc_dimension po cst pf pvg DECROUTINE .

    $default  reduce using rule 8 (DECROUTINE)


state 220

    9 DECROUTINE: type idf mc_dimension po cst vig cst pf pvg . DECROUTINE

    mc_read         shift, and go to state 9
    mc_write        shift, and go to state 10
    mc_if           shift, and go to state 11
    mc_dowhile      shift, and go to state 12
    mc_equivalence  shift, and go to state 13
    type            shift, and go to state 148
    idf             shift, and go to state 149

    DECROUTINE   go to state 221
    INSTROUTINE  go to state 151
    INSTAFF      go to state 152
    INSTES       go to state 153
    INSTDOWHILE  go to state 154
    INSTIF       go to state 155
    INSTEQ       go to state 156
    INSTCALL     go to state 157


state 221

    9 DECROUTINE: type idf mc_dimension po cst vig cst pf pvg DECROUTINE .

    $default  reduce using rule 9 (DECROUTINE)
